name: ci-pr

on:
    pull_request:
        branches:
            - main
            - staging

jobs:
    ci-pr:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest]
                node: [14]
        outputs:
            changes-terraform: ${{steps.cfc-terraform.outputs.changed}}
            env: ${{steps.env.outputs.env}}
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Check files changed - Terraform
              id: cfc-terraform
              uses: uwblueprint/sdc-actions/actions/check-files-changed@main
              with:
                  branch: $GITHUB_BASE_REF
                  regex: "terraform/*"

            - name: Setup Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ matrix.node }}

            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"

            - name: Cache node_modules
              uses: actions/cache@v2
              id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-yarn-

            - name: Install dependencies
              run: yarn

            - name: Fetch target pr branch for diff
              run: git fetch origin $GITHUB_BASE_REF:refs/remotes/origin/$GITHUB_BASE_REF

            - name: Linting modified files Prettier
              id: prettier-pr
              run: yarn lint:prettier-modified-files
              continue-on-error: true

            - name: Linting modified files ESlint
              id: eslint-pr
              run: yarn lint:eslint-modified-files
              continue-on-error: true

            - name: Create linting comment on error
              if: steps.prettier-pr.outcome == 'failure' || steps.eslint-pr.outcome == 'failure'
              uses: actions/github-script@v5
              with:
                  script: |
                      const output = `#### Prettier status: \`${{ steps.prettier-pr.outcome }}\`
                      #### Eslint status: \`${{ steps.eslint-pr.outcome }}\``;

                      github.rest.issues.createComment({
                        issue_number: context.issue.number,
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        body: output
                      });
                      core.setFailed('Linting errors. Please check prettier and eslint');

            - name: Build
              run: yarn build

    terraform-staging:
        needs: ci-pr
        if: needs.ci-pr.outputs.changes-terraform == 'true'
        environment: staging
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./terraform/environments/staging
        env:
            TF_VAR_zoom_class_link_value: ${{ secrets.ZOOM_CLASS_LINK_VALUE }}
        steps:
            - name: Checkout
              uses: actions/checkout@v2
              
            - name: Setup Python
              uses: actions/setup-python@v2
              with:
                python-version: '3.8'
                cache: 'pip'
                cache-dependency-path: '**/requirements.txt'

            - name: Install Lambda dependencies
              run: |
                cd ../../modules/lambda/files/cronMailing
                pip install -r requirements.txt -t .

            # TODO change to OIDC provider
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ secrets.AWS_REGION }}

            - name: Terraform checks
              uses: uwblueprint/sdc-actions/actions/terraform-fmt-validate-plan-apply@main

    terraform-production:
        needs: ci-pr
        if: needs.ci-pr.outputs.changes-terraform == 'true'
        environment: production
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./terraform/environments/production
        env:
            TF_VAR_zoom_class_link_value: ${{ secrets.ZOOM_CLASS_LINK_VALUE }}
        steps:
            - name: Checkout
              uses: actions/checkout@v2
              
            - name: Setup Python
              uses: actions/setup-python@v2
              with:
                python-version: '3.8'
                cache: 'pip'
                cache-dependency-path: '**/requirements.txt'

            - name: Install Lambda dependencies
              run: |
                cd ../../modules/lambda/files/cronMailing
                pip install -r requirements.txt -t .

            # TODO change to OIDC provider
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ secrets.AWS_REGION }}

            - name: Terraform steps
              uses: uwblueprint/sdc-actions/actions/terraform-fmt-validate-plan-apply@main
