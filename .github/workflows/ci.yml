name: ci

on:
    push:
        branches:
            - main
            - staging
    pull_request:
        branches:
            - main
            - staging

jobs:
    ci:
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                os: [ubuntu-latest]
                node: [14]

        steps:
            - name: Checkout
              uses: actions/checkout@main

            - name: Setup node env
              uses: actions/setup-node@v2.1.2
              with:
                  node-version: ${{ matrix.node }}

            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"

            - name: Cache node_modules
              uses: actions/cache@v2
              id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Install dependencies
              run: yarn

            - name: Linting all Prettier on push
              if: ${{ github.event_name != 'pull_request' }}
              run: yarn lint:prettier

            - name: Linting all ESlint on push
              if: ${{ github.event_name != 'pull_request' }}
              run: yarn lint:eslint
            
            - name: Linting modified files Prettier on pull request
              if: ${{ github.event_name == 'pull_request' }}
              run: yarn lint:prettier-modified-files

            - name: Linting modified files ESlint on pull request
              if: ${{ github.event_name == 'pull_request' }}
              run: yarn lint:eslint-modified-files

            - name: Build
              run: yarn build
